/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package practice;

import java.rmi.Naming;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Administrator
 */
public class ManagerClient extends javax.swing.JFrame {

    String serviceName = "rmi://localhost:1098/ProductService";
    ProductMngInterface stub = null;
    Vector header = new Vector();
    Vector data = null;

    public ManagerClient() {
        initComponents();
        tblProduct.setSize(150, 150);
        
        header.add("Code");
        header.add("Name");
        header.add("Price");
        header.add("Date Expise");
        header.add("Year Release");
        try {
            stub = (ProductMngInterface) Naming.lookup(serviceName);
            data = stub.getInitinalData();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
        DefaultTableModel m = (DefaultTableModel) (tblProduct.getModel());
        m.setDataVector(data, header);
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblProduct = new javax.swing.JTable();
        btnNew = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        lblCode = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblPrice = new javax.swing.JLabel();
        txtCode = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtPrice = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        lblExpire = new javax.swing.JLabel();
        txtDate = new javax.swing.JTextField();
        lbnYear = new javax.swing.JLabel();
        txtYear = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblProduct.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProductMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblProduct);

        btnNew.setText("New");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        lblCode.setText("Code:");

        lblName.setText("Name:");

        lblPrice.setText("Price:");

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        lblExpire.setText("Expire Date");

        lbnYear.setText("Release Year");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblName)
                    .addComponent(lblCode)
                    .addComponent(lblPrice)
                    .addComponent(btnNew)
                    .addComponent(lblExpire)
                    .addComponent(lbnYear))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnUpdate)
                        .addGap(28, 28, 28)
                        .addComponent(btnSave))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCode, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)))
                .addGap(24, 24, 24))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCode)
                            .addComponent(txtCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblName)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPrice)
                            .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblExpire)
                            .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbnYear)
                            .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnNew)
                            .addComponent(btnUpdate)
                            .addComponent(btnSave))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        Vector v = new Vector();
        v.add("");
        v.add("");
        v.add("");
        v.add("");
        v.add("");
        data.add(v);
        tblProduct.updateUI();
        txtCode.setText("");
        txtName.setText("");
        txtPrice.setText("");
        txtDate.setText("");
        txtYear.setText("");
        txtCode.setEditable(false);
        txtName.setEditable(false);
        txtPrice.setEditable(false);
        txtDate.setEditable(false);
        txtYear.setEditable(false);
        int lastRow = data.size() - 1;
        tblProduct.addRowSelectionInterval(lastRow, lastRow);
    }//GEN-LAST:event_btnNewActionPerformed

    public boolean checkValid(Vector data) {
        Vector a = (Vector) data.get(data.size() -1);
        Vector row = null;
        for (int i = 0; i < data.size() -1; i++) {
            row = (Vector) data.get(i);
            if (row.get(0).equals(a.get(0))) {
                JOptionPane.showMessageDialog(this, "Invalid code!");
                return false;
            }
        }
        return true;
    }

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        boolean flag = true;
        do{
            flag = checkValid(data);
            if(flag == false){
                tblProduct.updateUI();
                return;
            }
        }while(flag == false);
        for (int i = 0; i < data.size(); i++) {
            Vector curRow = (Vector) data.get(i);
            String curName = (String) curRow.get(1);
            if (curName.trim().equals("")) {
                JOptionPane.showMessageDialog(this, "Name must be input.");
                return;
            }
            // price
            if (curRow.get(2).toString().trim().equals("0")) {
                JOptionPane.showMessageDialog(this, "Salary can not be 0");
                return;
            } 
            else if(!curRow.get(2).toString().trim().matches("^\\d+$")) {
                JOptionPane.showMessageDialog(this, "Salary must be an positive integer.");
                return;
            }
            // date
            if (curRow.get(3).toString().trim().equals("0")) {
                JOptionPane.showMessageDialog(this, "Date can not be 0");
                return;
            } 
            else if(!curRow.get(3).toString().trim().matches("[0-9]{2}")) {
                JOptionPane.showMessageDialog(this, "Date must be a 2 positive number");
                return;
            }
            //year
            if (curRow.get(4).toString().trim().equals("0")) {
                JOptionPane.showMessageDialog(this, "Year can not be 0");
                return;
            } 
            else if(!curRow.get(4).toString().trim().matches("[0-9]{3,4}")) {
                JOptionPane.showMessageDialog(this, "Year must between (xxx - xxxx)");
                return;
            }
        }
        try {
            if (stub.saveList(data) == true) {
                JOptionPane.showMessageDialog(this, "Saved");
            } else {
                JOptionPane.showMessageDialog(this, "ERROR !!!! Data can not be saved.");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        int selectedRow = tblProduct.getSelectedRow();
        Vector v = (Vector) data.get(selectedRow);
        
        String newName = txtName.getText();
        String newPrice = txtPrice.getText();
        String newDate = txtDate.getText();
        String newYear = txtYear.getText();
        
        boolean flag;
        do{
            flag = checkValid(data);
            if(flag == false){
                tblProduct.updateUI();
                return;
            }
        }while(flag == false);
        for (int i = 0; i < data.size(); i++) {
            //name
            if (newName.trim().equals("")) {
                JOptionPane.showMessageDialog(this, "Name must be input.");
                return;
            }
            if(!newName.matches("[A-Za-z]{3,20}")){
                JOptionPane.showMessageDialog(this, "Invalid input!");
                return;
            }
            //price
            if (newPrice.trim().equals("0")) {
                JOptionPane.showMessageDialog(this, "Price can not be 0");
                return;
            } 
            else if(!newPrice.trim().matches("^\\d+$")) {
                JOptionPane.showMessageDialog(this, "Price must be an positive integer.");
                return;
            }
            // date
            if (newDate.trim().equals("0")) {
                JOptionPane.showMessageDialog(this, "Date can not be 0");
                return;
            } 
            else if(!newDate.trim().matches("[0-9]{2}")) {
                JOptionPane.showMessageDialog(this, "Date must be a 2 positive number.");
                return;
            }
            // year
            if (newYear.trim().equals("0")) {
                JOptionPane.showMessageDialog(this, "Year can not be 0");
                return;
            } 
            else if(!newYear.trim().matches("[0-9]{3,4}")) {
                JOptionPane.showMessageDialog(this, "Year must be between xxx -xxxx");
                return;
            }
        }
        
        v.set(1, newName);
        v.set(2, newPrice);
        v.set(3, newDate);
        v.set(4, newYear);
        tblProduct.updateUI();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void tblProductMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProductMouseClicked
        int selectedRow = tblProduct.getSelectedRow();
        
        String code = tblProduct.getValueAt(selectedRow, 0).toString().trim();
        String name = tblProduct.getValueAt(selectedRow, 1).toString().trim();
        String price = tblProduct.getValueAt(selectedRow, 2).toString().trim();
        String date = tblProduct.getValueAt(selectedRow, 3).toString().trim();
        String year = tblProduct.getValueAt(selectedRow, 4).toString().trim();
        
        txtCode.setText(code);
        txtName.setText(name);
        txtPrice.setText(price);
        txtDate.setText(date);
        txtYear.setText(year);
        txtCode.setEditable(false);
    }//GEN-LAST:event_tblProductMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManagerClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManagerClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManagerClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManagerClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManagerClient().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCode;
    private javax.swing.JLabel lblExpire;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPrice;
    private javax.swing.JLabel lbnYear;
    private javax.swing.JTable tblProduct;
    private javax.swing.JTextField txtCode;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtYear;
    // End of variables declaration//GEN-END:variables
}
